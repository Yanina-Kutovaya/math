import numpy as np
import scipy.linalg

# 1. Решите линейную систему:
A = np.array([[1, 2, 3], [4, 0, 6], [7, 8, 9]])
B = np.array([12, 2, 1])
print('Ответ: ', np.linalg.solve(A, B))

# 2. Найдите псевдорешение:
A = np.array([[1, 2, -1], [3, -4, 0], [8, 5, 2], [2, 0, 5], [11, 4, -7]])
B = np.array([1, 7, 12, 7, 15])
print(np.linalg.lstsq(A, B, rcond=None))

# 3. Сколько решений имеет линейная система:
A = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
B = np.array([12, 2, 1])

print('Система решений не имеет, так как детерминант А равен 0: ', round(np.linalg.det(A),3))
A1 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 0]])

# Если ноль – то измените вектор правой части так, чтобы система стала совместной, и решите ее.
print('Измененная матрица A1: ')
print(A1)
print('Ответ с измененной матрицей: ', np.linalg.solve(A1, B))

# 4. Вычислите LU-разложение матрицы.
# После этого придумайте вектор правых частей и решите полученную линейную систему трех уравнений с данной матрицей.
A = np.array([[1, 2, 3], [2, 16, 21], [4, 28, 73]])
B = np.array([1, 12, 4])
P, L, U = scipy.linalg.lu(A)

P1 = np.linalg.inv(P)
B1 = np.dot(P1, B)
Y = np.linalg.solve(L, B1)
X = np.linalg.solve(U, Y)
print('Проверка: AX - B = ', np.dot(A, X) - B)
print('Ответ: ', X)

